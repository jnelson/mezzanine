
@mixin border-radius( $radius: 2px ) {
	
	@include prefix( border-radius, $radius);

	}
	
@mixin prefix( $property, $value ) {
	
	-webkit-#{$property}: 	$value;
	-khtml-#{$property}: 	$value;
	-moz-#{$property}: 		$value;
	-o-#{$property}: 		$value;
	-ms-#{$property}: 		$value;
	#{$property}: 			$value;
	
	}
	
@mixin linear-gradient($fromColor, $toColor) {
    
    background-color: $toColor; /* Fallback Color */
    background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
    background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
    background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
    background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
    background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
    background-image:         linear-gradient(top, $fromColor, $toColor);
    filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}

$baseFontSize: 16;

@function pem($pxval, $base: $baseFontSize) {

	@return #{$pxval / $base}em;

	}

.clearfix {
    
    *zoom: 1;
    
    &:before, &:after {
        
        content: "";
        display: table;
    }
    
    &:after {
        
        clear: both;
    }
}

.text-replacement {
    
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}